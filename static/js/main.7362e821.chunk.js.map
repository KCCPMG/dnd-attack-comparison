{"version":3,"sources":["DiceProbs.js","components/character-bar.js","components/comparison.js","App.js","serviceWorker.js","index.js"],"names":["averageResult","diceOutcomes","length","reduce","a","b","averageResultFromRollObj","rollObj","Object","values","sum","keys","key","combineResultObjects","obj1","obj2","obj1Lower","Math","min","obj2Lower","newUpper","max","newObj","i","key1","key2","Number","probability","critDamage","totalRoll","normalMax","eval","replace","components","splitRoll","newComponents","component","match","split","dice","dieSize","push","newRollStr","join","critArray","createDiceArray","map","result","critRollString","newComponent","splice","rolls","d","results","n","rollSet","num","temp","running","minResult","maxResult","rollResultObj","rollString","undefined","flatObj","allRolls","rollResultObjPercentage","rro","totalPossibilities","console","log","totalCritRollResultObj","maxStandardRoll","totalRollResultObj","RegExp","CharacterBar","props","setExpanded","bool","setState","expanded","setShowDeleteCharacterModal","showDeleteCharacterModal","hide","setAttackToEdit","id","attackToEdit","setShowAttackModal","showAttackModal","state","test","editIcon","height","viewBox","className","fill","xmlns","onClick","editCharacter","char","fillRule","expandIcon","width","collapseIcon","deleteIcon","e","preventDefault","deleteCharModal","Modal","centered","onHide","this","show","Header","closeButton","Title","Container","style","overflowWrap","name","Row","handleDeleteCharacter","stopPropagation","Col","xs","sm","md","lg","xl","textAlign","attacks","at","Attack","attack","attackId","changeComparison","handleDeleteAttack","handleAddAttack","handleEditAttack","React","Component","AddAttack","hideAttackModal","EditAttackModal","updateDamage","value","updatedErrors","JSON","parse","stringify","errors","newValue","Boolean","includes","filter","clearForm","attackName","firstAttackModifier","firstAttackDamage","secondAttackModifier","secondAttackDamage","thirdAttackModifier","thirdAttackDamage","fourthAttackModifier","fourthAttackDamage","size","Form","Group","as","Label","Control","type","required","autoComplete","placeholder","onChange","target","AddAttackCol","formData","charId","prevProps","prevState","snapshot","prevAttack","assign","currentAttack","firstAttack","modifier","damage","secondAttack","thirdAttack","fourthAttack","children","useState","displayCompareTooltip","setDisplayCompareTooltip","displayEditTooltip","setDisplayEditTooltip","displayDeleteTooltip","setDisplayDeleteTooltip","showDeleteAttackModal","setShowDeleteAttackModal","compareRef","useRef","editRef","deleteRef","onMouseEnter","onMouseLeave","ref","deleteAttackModal","compare","Overlay","placement","current","Tooltip","LineGraph","borderColors","datasets","borderColor","characterName","backgroundColor","label","data","ACRange","ac","AC","avg","att","averageDamageRoll","averageCrit","expectedDamage","processAttack","round","lineTension","lineChart","labels","options","scales","yAxes","scaleLabel","display","labelString","fontFamily","fontSize","xAxes","legend","Comparison","characters","forEach","character","compAttack","renderedAttacks","fourthModifier","TitleBar","Navbar","App","charName","find","cha","showCharacterModal","charModalName","createTrueEditFalse","editId","handleCreateCharacter","charsCopy","nextID","handleEditCharacter","c","createAttack","attackIndex","updateAttack","checked","mod","newMod","newDamage","attackOut","Body","onSubmit","controlId","column","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7362e821.chunk.js","sourcesContent":["export function averageResult(diceOutcomes) {\r\n  // Outputs average from array of possible results\r\n  let length = diceOutcomes.length;\r\n  let total = diceOutcomes.reduce((a,b) => (a+b), 0);\r\n  return total/length;\r\n}\r\n\r\nexport function averageResultFromRollObj(rollObj) {\r\n  // Returns number from roll object\r\n  let length = Object.values(rollObj).reduce((a,b) => a+b);\r\n  let sum = 0;\r\n  for (let key of Object.keys(rollObj)) {\r\n    sum += key * rollObj[key]\r\n  }\r\n  return sum/length;\r\n}\r\n\r\nexport function combineResultObjects(obj1, obj2) {\r\n  // Creates a new roll object combined from two smaller roll objects to avoid oversized dice arrays\r\n  let obj1Lower = Math.min(...Object.keys(obj1))\r\n  let obj2Lower = Math.min(...Object.keys(obj2))\r\n\r\n  let obj1Upper = Math.max(...Object.keys(obj1))\r\n  let obj2Upper = Math.max(...Object.keys(obj2))\r\n\r\n  let newLower = obj1Lower+obj2Lower;\r\n  let newUpper = obj1Upper+obj2Upper;\r\n\r\n  let newObj = {};\r\n  for (let i=newLower; i<=newUpper; i++) {\r\n    newObj[i] = 0;\r\n  }\r\n\r\n  for (let key1 of Object.keys(obj1)) {\r\n    for (let key2 of Object.keys(obj2)) {\r\n      let sum = Number(key1)+Number(key2);\r\n      let probability = Number(obj1[key1])*Number(obj2[key2]);\r\n      newObj[sum] += probability;\r\n    }\r\n  }\r\n  return newObj;\r\n}\r\n\r\nexport function critDamage(totalRoll) {\r\n  // Get max critical damage result array of total roll\r\n  \r\n  let normalMax = eval(totalRoll.replace(/d/gi, '*'));\r\n\r\n  // double dice for total roll\r\n  let components = splitRoll(totalRoll);\r\n\r\n  let newComponents = [];\r\n  // put each die into its own output array\r\n  for (let component of components) {\r\n    if (component.match(/d/i)) {\r\n      let [dice, dieSize] = component.split(/d/i);\r\n      dice = Number(dice);\r\n      newComponents.push(2*dice + \"d\" + dieSize)\r\n    } else {\r\n      newComponents.push(component);\r\n    }\r\n  }\r\n\r\n  let newRollStr = newComponents.join(\"+\");\r\n\r\n  let critArray = createDiceArray(newRollStr);\r\n\r\n  critArray = critArray.map(result => {\r\n    if (result >= normalMax) return result;\r\n    else return normalMax;\r\n  })\r\n\r\n  return critArray;\r\n}\r\n\r\nexport function critRollString(totalRoll) {\r\n  // Take a roll string and output a new roll signifying the crit roll\r\n  let components = totalRoll.split(/\\+/g);\r\n  for (let i in components) {\r\n    if (components[i].match(/d/gi)) {\r\n      let [dice, dieSize] = components[i].split(/d/gi);\r\n      dice = dice*2;\r\n      let newComponent = `${dice}d${dieSize}`\r\n      components.splice(i, 1, newComponent);\r\n    }\r\n  }\r\n  return components.join(\"+\")\r\n}\r\n\r\nexport function createDiceArray(totalRoll) {\r\n  // Create an array with every single total from all dice permutations taken from the roll string\r\n  let components = splitRoll(totalRoll);\r\n\r\n  let rolls = [];\r\n  // put each die into its own output array\r\n  for (let component of components) {\r\n    if (component.match(/d/i)) {\r\n      let [dice, dieSize] = component.split(/d/i);\r\n      dice = Number(dice);\r\n      dieSize = Number(dieSize);\r\n      for (let d=0; d<dice; d++) {\r\n        let results = [];\r\n        for (let n=1; n<=dieSize; n++) {\r\n          results.push(n);\r\n        }\r\n        rolls.push(results);\r\n      }\r\n    } else {\r\n      rolls.push([Number(component[0])])\r\n    }\r\n  }\r\n\r\n  let results = [];\r\n  for (let rollSet of rolls) {\r\n    if (results.length===0) {\r\n      for (let num of rollSet) {\r\n        results.push(num);\r\n      }\r\n    } else {\r\n      let temp = [];\r\n      for (let running of results) {\r\n        for (let num of rollSet) {\r\n          temp.push(running+num);\r\n        }\r\n      }\r\n      results = temp;\r\n    }\r\n  }\r\n  return results;\r\n}\r\n\r\n\r\nexport function minResult(diceOutcomes) {\r\n  // Returns smallest result of dice outcome array\r\n  return Math.min(...diceOutcomes);\r\n}\r\n\r\n\r\nexport function maxResult(diceOutcomes) {\r\n  // Returns largets result of dice outcome array\r\n  return Math.max(...diceOutcomes);\r\n}\r\n\r\nexport function rollResultObj(rollString) {\r\n  // Takes rollString, exports resultObj with number of possible permutations as values\r\n\r\n  let [dice, dieSize] = rollString.split(/d/gi);\r\n\r\n  // handling flat modifier\r\n  if (dieSize===undefined) {\r\n    let flatObj = {}\r\n    flatObj[dice] = 1;\r\n    return flatObj;\r\n  }\r\n\r\n  // avoid overlarge dice arrays\r\n  if (dice>4) {\r\n    return combineResultObjects(rollResultObj(`4d${dieSize}`), rollResultObj(`${dice-4}d${dieSize}`))\r\n  }\r\n  \r\n  let rollObj = {};\r\n  for (let i=dice; i<=dice*dieSize; i++) { rollObj[i] = 0 };\r\n\r\n  let allRolls = createDiceArray(rollString);\r\n\r\n  for (let roll of allRolls) {\r\n    rollObj[roll] +=1\r\n  }\r\n\r\n  return rollObj;\r\n}\r\n\r\nexport function rollResultObjPercentage(rollString) {\r\n  // takes rollString, exports rollObj with probability percentage values\r\n\r\n  // rro for roll result obj\r\n  let rro = rollResultObj(rollString)\r\n  let totalPossibilities = Object.values(rro).reduce((a,b) => a+b);\r\n  for (let key of Object.keys(rro)) {\r\n    rro[key] = rro[key]/totalPossibilities;\r\n  }\r\n  return rro;\r\n}\r\n\r\nexport function splitRoll(totalRoll) {\r\n  // Break roll into individual components- helper function\r\n  console.log(totalRoll);\r\n  console.log(typeof(totalRoll));\r\n  let components = totalRoll\r\n  .replace(/ +/g, '')\r\n  .split(/\\+/)\r\n\r\n  return components;\r\n}\r\n\r\nexport function totalCritRollResultObj(totalRoll) {\r\n  // Take roll string and output roll object reflecting critical\r\n  let components = totalRoll.split(/\\+/g);\r\n\r\n  for (let i in components) {\r\n    if (components[i].match(/d/gi)) {\r\n      let [dice, dieSize] = components[i].split(/d/gi);\r\n      dice = dice*2;\r\n      let newComponent = `${dice}d${dieSize}`\r\n      components.splice(i, 1, newComponent);\r\n    }\r\n  }\r\n\r\n  let critRollString = components.join(\"+\");\r\n  let maxStandardRoll = eval(totalRoll.replace(/d/gi, \"*\"))\r\n  let rollObj = totalRollResultObj(critRollString);\r\n\r\n  // Take all rolls below max standard, shift their probability into max standard as low-end threshhold for crit\r\n  for (let i=Math.min(...Object.keys(rollObj)); i<maxStandardRoll; i++) {\r\n    rollObj[maxStandardRoll] += rollObj[i];\r\n    rollObj[i] = 0;\r\n  }\r\n  return rollObj;\r\n}\r\n\r\nexport function totalRollResultObj(totalRoll) {\r\n  // Return roll object from complete roll string\r\n  let components = totalRoll.split(/\\+/g);\r\n  for (let i in components) {\r\n    components.splice(i, 1, rollResultObj(components[i]));\r\n  }\r\n  return components.reduce((a, b) => combineResultObjects(a, b));\r\n}\r\n\r\n","import React, {useState, useRef} from 'react';\r\nimport {Container, Row, Col, Modal, Form, Overlay, Tooltip} from 'react-bootstrap'\r\n\r\nvar totalRoll = new RegExp(/^(\\d{1,2}d\\d{1,2})(\\+\\d{1,2}d\\d{1,2})*([-+]\\d{1,2})*$/i)\r\n\r\nclass CharacterBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n      showDeleteCharacterModal: false,\r\n      attackToEdit: null,\r\n      showAttackModal: false,\r\n      test: 0,\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  setExpanded = (bool) => {\r\n    this.setState({expanded: bool})\r\n  }\r\n\r\n  setShowDeleteCharacterModal = (bool) => {\r\n    this.setState({showDeleteCharacterModal: bool})\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({showDeleteCharacterModal: false})\r\n  }\r\n\r\n  setAttackToEdit = (id) => {\r\n    this.setState({attackToEdit: id})\r\n  }\r\n\r\n  setShowAttackModal = (bool) => {\r\n    this.setState({showAttackModal: bool})\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  render() {\r\n    \r\n    var editIcon = <svg \r\n      // width=\"1em\" \r\n      height=\"20\" \r\n      viewBox=\"0 0 16 16\" \r\n      className=\"bi bi-pencil-square\" \r\n      fill=\"currentColor\" \r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      onClick={()=>{this.props.editCharacter(this.props.char.id)}}\r\n      >\r\n      <path\r\n        d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"\r\n      />\r\n      <path \r\n        fillRule=\"evenodd\" \r\n        d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"\r\n      />\r\n    </svg>\r\n\r\n    var expandIcon = <svg \r\n      onClick={() => {this.setState({expanded: true})}}\r\n      width=\"1em\" \r\n      height=\"1em\" \r\n      viewBox=\"0 0 16 16\" \r\n      className=\"bi bi-chevron-down\" \r\n      fill=\"currentColor\" \r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path \r\n        fillRule=\"evenodd\" \r\n        d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\r\n      />\r\n    </svg>\r\n\r\n    var collapseIcon = <svg \r\n      onClick={() => {this.setState({expanded: false})}}\r\n      width=\"1em\" \r\n      height=\"1em\" \r\n      viewBox=\"0 0 16 16\" \r\n      className=\"bi bi-chevron-up\" \r\n      fill=\"currentColor\" \r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n      <path \r\n        fillRule=\"evenodd\" \r\n        d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"\r\n      />\r\n    </svg>\r\n\r\n    var deleteIcon = <svg \r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        this.setState({showDeleteCharacterModal: true});\r\n      }}\r\n      width=\"1em\" \r\n      height=\"1em\" \r\n      viewBox=\"0 0 16 16\" \r\n      className=\"\" \r\n      fill=\"currentColor\" \r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path \r\n        fillRule=\"evenodd\" \r\n        d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" \r\n      />\r\n      <path \r\n        fillRule=\"evenodd\" \r\n        d=\"M5.23 5.146a.5.5 0 0 0 0 .708l5 5a.5.5 0 0 0 .707-.708l-5-5a.5.5 0 0 0-.708 0z\"\r\n      />\r\n      <path \r\n        fillRule=\"evenodd\" \r\n        d=\"M10.937 5.146a.5.5 0 0 1 0 .708l-5 5a.5.5 0 0 1-.708-.708l5-5a.5.5 0 0 1 .707 0z\"\r\n      />\r\n    </svg>\r\n\r\n    let deleteCharModal = <Modal\r\n      centered\r\n      onHide={this.hide}\r\n      show={this.state.showDeleteCharacterModal}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          Delete Character\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Container>\r\n        <h3 style={{overflowWrap: \"break-word\"}}>\r\n          Are you sure you want to delete {this.props.char.name}?\r\n        </h3>\r\n        <br/>\r\n        <Row className=\"justify-content-around\">\r\n          <button\r\n            className=\"btn btn-outline-dark\"\r\n            onClick={()=>{\r\n              this.props.handleDeleteCharacter(this.props.char.id)\r\n            }}\r\n          >\r\n            <h3>Yes</h3>\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-dark\"\r\n            onClick={(e)=>{\r\n              this.setState({showDeleteCharacterModal: false});\r\n              // setShowDeleteModal(false)\r\n              e.stopPropagation();\r\n            }}\r\n          >\r\n            <h3>No</h3>\r\n          </button>\r\n        </Row>\r\n        <br/>\r\n      </Container>\r\n    </Modal>\r\n\r\n\r\n    return (\r\n      <Container className=\"character-bar\" >\r\n        <Row \r\n          className=\"character-bar-heading\"\r\n          // as={Row}\r\n        >\r\n          <Col className=\"character-name\">\r\n            {this.props.char.name}\r\n          </Col>\r\n          {/* <Col md=\"auto\"/> */}\r\n          <Col\r\n            // as={Col}\r\n            // cs=\"3\" // What is this? typo?\r\n            xs=\"7\"\r\n            sm=\"4\"\r\n            md=\"3\"\r\n            lg=\"3\"\r\n            xl=\"2\"\r\n            className=\"expand-toggle ml-auto mr-0 justify-content-between\"  \r\n            // onClick={() => {setExpanded(!expanded)}};\r\n          >\r\n            {/* <h3 \r\n              style={{display: 'inline'}}\r\n              onClick={()=>{\r\n                setExpanded(!expanded);\r\n              }}\r\n            >\r\n              {expanded ? \"-\" : \"+\"}\r\n            </h3> */}\r\n            {/* <img src=\"../assets/edit-icon.svg\" alt=\"\" title=\"Edit Icon\" /> */}\r\n  \r\n            <Row>\r\n              <Col>\r\n                {this.state.expanded ? collapseIcon : expandIcon}\r\n              </Col>\r\n              <Col>\r\n                {editIcon}\r\n              </Col>\r\n              <Col>\r\n                {deleteIcon}\r\n                {deleteCharModal}\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {this.state.expanded ? <h5 style={{textAlign: 'center'}}> ―Attacks― </h5> : ''}\r\n        {this.state.expanded ? this.props.char.attacks.map(at => {\r\n          return (\r\n            <Attack \r\n              attack={at} \r\n              key={at.attackId} \r\n              changeComparison={this.props.changeComparison}\r\n              setAttackToEdit={this.setAttackToEdit}\r\n              setShowAttackModal={this.setShowAttackModal}\r\n              handleDeleteAttack={this.props.handleDeleteAttack}\r\n            />\r\n          )\r\n        }) : \"\"}\r\n        {this.state.expanded ? <AddAttack \r\n          handleAddAttack={this.props.handleAddAttack} \r\n          handleEditAttack={this.props.handleEditAttack}\r\n          char={this.props.char}\r\n          setExpanded={this.setExpanded}\r\n          attackToEdit={this.state.attackToEdit}\r\n          showAttackModal={this.state.showAttackModal}\r\n          setAttackToEdit={this.setAttackToEdit}\r\n          setShowAttackModal={this.setShowAttackModal}\r\n        /> : \"\"}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass AddAttack extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"add-attack\">\r\n        <div className=\"add-attack-button-div text-center\">\r\n          <button \r\n            className=\"btn btn-outline-dark add-attack-button\"\r\n            onClick={() => {\r\n              this.props.setShowAttackModal(true)\r\n            }}\r\n          >\r\n            <h5>+ Add Attack +</h5>\r\n          </button>\r\n          <br/>\r\n        </div>\r\n        <EditAttackModal \r\n          showAttackModal={this.props.showAttackModal}\r\n          hideAttackModal={()=>{this.props.setShowAttackModal(false)}}\r\n          char={this.props.char}\r\n          handleAddAttack={this.props.handleAddAttack}\r\n          attackToEdit={this.props.attackToEdit}\r\n          setAttackToEdit={this.props.setAttackToEdit}\r\n          handleEditAttack={this.props.handleEditAttack}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass EditAttackModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      attackName: '',\r\n      firstAttackModifier: '',\r\n      firstAttackDamage: '',\r\n      secondAttackModifier: '',\r\n      secondAttackDamage: '',\r\n      thirdAttackModifier: '',\r\n      thirdAttackDamage: '',\r\n      fourthAttackModifier: '',\r\n      fourthAttackDamage: '',\r\n      errors: []\r\n    }\r\n  }\r\n\r\n  updateDamage = (key, value) => {\r\n    let updatedErrors = JSON.parse(\r\n      JSON.stringify(this.state.errors)\r\n    );\r\n\r\n    let newValue = value.replace(/ /g, '');\r\n    let error;\r\n    \r\n    (newValue.length > 0) ? error = !Boolean(newValue.match(totalRoll)) : error = false\r\n\r\n    if (error) {\r\n      if (!updatedErrors.includes(key)) {\r\n        updatedErrors.push(key);\r\n      }\r\n    } else {\r\n      updatedErrors = updatedErrors.filter(e => {\r\n        if (e===key) return false;\r\n        else return true;\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      [key]: value,\r\n      errors: updatedErrors\r\n    })\r\n  }\r\n\r\n  clearForm = () => {\r\n    this.setState({\r\n      attackId: null,\r\n      attackName: '',\r\n      firstAttackModifier: '',\r\n      firstAttackDamage: '',\r\n      secondAttackModifier: '',\r\n      secondAttackDamage: '',\r\n      thirdAttackModifier: '',\r\n      thirdAttackDamage: '',\r\n      fourthAttackModifier: '',\r\n      fourthAttackDamage: '',\r\n      errors: []\r\n    }, this.props.setAttackToEdit(null))\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Modal\r\n        show={this.props.showAttackModal}\r\n        centered\r\n        size=\"lg\"\r\n        onHide={()=>{\r\n          this.clearForm();\r\n          this.props.hideAttackModal();\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Add Attack - {this.props.char.name}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <br/>\r\n        <Container>\r\n          <Form>\r\n            <Form.Group \r\n              as={Container}\r\n            >\r\n              <Row>\r\n                <Form.Label as={Col}>\r\n                  Attack Name\r\n                </Form.Label>\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"AttackName\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Attack Name\"\r\n                    value={this.state.attackName}\r\n                    onChange={(e)=>{this.setState({\r\n                      attackName: e.target.value\r\n                    })}}\r\n                    \r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* First Attack */}\r\n              <Row>\r\n                First Attack\r\n              </Row>\r\n              <Row>\r\n                <Form.Label as={AddAttackCol} >\r\n                  Attack Modifier\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"FirstAttackModifier\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 3\"\r\n                    value={this.state.firstAttackModifier}\r\n                    onChange={(e)=>{this.setState({\r\n                      firstAttackModifier: e.target.value\r\n                    })}}\r\n                  />\r\n                </AddAttackCol>\r\n                <Form.Label as={AddAttackCol}>\r\n                  Damage Dice\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"FirstAttackDamage\"\r\n                    className={(this.state.errors.includes(\"firstAttackDamage\")) ? \"is-invalid\" : \"\"}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 2d8 + 1d4 + 5\"\r\n                    value={this.state.firstAttackDamage}\r\n                    onChange={(e)=>{this.updateDamage(\"firstAttackDamage\", e.target.value)}}\r\n                  />\r\n                </AddAttackCol>\r\n              </Row>\r\n\r\n              {/* Second Attack */}\r\n              <Row>\r\n                Second Attack\r\n              </Row>\r\n              <Row>\r\n                <Form.Label as={AddAttackCol} >\r\n                  Attack Modifier\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"SecondAttackModifier\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 3\"\r\n                    value={this.state.secondAttackModifier}\r\n                    onChange={(e)=>{this.setState({\r\n                      secondAttackModifier: e.target.value\r\n                    })}}\r\n                  />\r\n                </AddAttackCol>\r\n                <Form.Label as={AddAttackCol}>\r\n                  Damage Dice\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"SecondAttackDamage\"\r\n                    className={(this.state.errors.includes(\"secondAttackDamage\")) ? \"is-invalid\" : \"\"}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 2d8 + 1d4 + 5\"\r\n                    value={this.state.secondAttackDamage}\r\n                    onChange={(e)=>{this.updateDamage(\"secondAttackDamage\", e.target.value)}}\r\n                  />\r\n                </AddAttackCol>\r\n              </Row>\r\n\r\n              {/* Third Attack */}\r\n              <Row>\r\n                Third Attack\r\n              </Row>\r\n              <Row>\r\n                <Form.Label as={AddAttackCol} >\r\n                  Attack Modifier\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"ThirdAttackModifier\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 3\"\r\n                    value={this.state.thirdAttackModifier}\r\n                    onChange={(e)=>{this.setState({\r\n                      thirdAttackModifier: e.target.value\r\n                    })}}\r\n                  />\r\n                </AddAttackCol>\r\n                <Form.Label as={AddAttackCol}>\r\n                  Damage Dice\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"ThirdAttackDamage\"\r\n                    className={(this.state.errors.includes(\"thirdAttackDamage\")) ? \"is-invalid\" : \"\"}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 2d8 + 1d4 + 5\"\r\n                    value={this.state.thirdAttackDamage}\r\n                    onChange={(e)=>{this.updateDamage(\"thirdAttackDamage\", e.target.value)}}\r\n                  />\r\n                </AddAttackCol>\r\n              </Row>\r\n\r\n              {/* Fourth Attack  */}\r\n              <Row>\r\n                Fourth Attack\r\n              </Row>\r\n              <Row>\r\n                <Form.Label as={AddAttackCol} >\r\n                  Attack Modifier\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"fourthAttackModifier\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 3\"\r\n                    value={this.state.fourthAttackModifier}\r\n                    onChange={(e)=>{this.setState({\r\n                      fourthAttackModifier: e.target.value\r\n                    })}}\r\n                  />\r\n                </AddAttackCol>\r\n                <Form.Label as={AddAttackCol}>\r\n                  Damage Dice\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"FourthAttackDamage\"\r\n                    className={(this.state.errors.includes(\"fourthAttackDamage\")) ? \"is-invalid\" : \"\"}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 2d8 + 1d4 + 5\"\r\n                    value={this.state.fourthAttackDamage}\r\n                    onChange={(e)=>{this.updateDamage(\"fourthAttackDamage\", e.target.value)}}\r\n                  />\r\n                </AddAttackCol>\r\n              </Row>\r\n              <br/>\r\n              <Row className=\"justify-content-md-center\">\r\n                <Col className=\"text-center\">\r\n                  {this.state.errors.length===0 ? <button \r\n                  className=\"btn btn-outline-dark\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n\r\n                    let {attackName, firstAttackModifier, firstAttackDamage, secondAttackModifier, secondAttackDamage, thirdAttackModifier, thirdAttackDamage, fourthAttackModifier, fourthAttackDamage} = this.state;\r\n\r\n                    e.formData = {\r\n                      charId: this.props.char.id,\r\n                      attackName,\r\n                      firstAttackModifier,\r\n                      firstAttackDamage,\r\n                      secondAttackModifier,\r\n                      secondAttackDamage,\r\n                      thirdAttackModifier,\r\n                      thirdAttackDamage,\r\n                      fourthAttackModifier,\r\n                      fourthAttackDamage,\r\n                    }\r\n\r\n                    if (this.state.attackId) {\r\n                      e.formData.attackId = this.state.attackId;\r\n                      this.props.handleEditAttack(e);\r\n                    } else {\r\n                      this.props.handleAddAttack(e);\r\n                    }\r\n                    \r\n                    this.clearForm();\r\n                    this.props.hideAttackModal();\r\n                  }}\r\n                  >\r\n                    {this.state.attackId ? \"Update\" : \"Add\"} Attack\r\n                  </button> : null}\r\n                  <br/>\r\n                </Col>\r\n              </Row>            \r\n            </Form.Group>\r\n          </Form>\r\n        </Container>\r\n      </Modal>\r\n    )    \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    let prevAttack = Object.assign({}, prevProps.attackToEdit)\r\n    let currentAttack = Object.assign({}, this.props.attackToEdit)\r\n\r\n    if (JSON.stringify(prevAttack) !== JSON.stringify(currentAttack)) {\r\n      this.setState({\r\n        attackId: currentAttack.attackId,\r\n        attackName: currentAttack.attackName,\r\n        firstAttackModifier: currentAttack.firstAttack?.modifier,\r\n        firstAttackDamage: currentAttack.firstAttack?.damage,\r\n        secondAttackModifier: currentAttack.secondAttack?.modifier,\r\n        secondAttackDamage: currentAttack.secondAttack?.damage,\r\n        thirdAttackModifier: currentAttack.thirdAttack?.modifier,\r\n        thirdAttackDamage: currentAttack.thirdAttack?.damage,\r\n        fourthAttackModifier: currentAttack.fourthAttack?.modifier,\r\n        fourthAttackDamage: currentAttack.fourthAttack?.damage,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction AddAttackCol(props) {\r\n  return (\r\n    <Col sm={5} md={3} lg={3}>\r\n      {props.children}\r\n    </Col>\r\n  )\r\n}\r\n\r\nfunction Attack(props) {\r\n  const [displayCompareTooltip, setDisplayCompareTooltip] = useState(false);\r\n  const [displayEditTooltip, setDisplayEditTooltip] = useState(false);\r\n  const [displayDeleteTooltip, setDisplayDeleteTooltip] = useState(false);\r\n  const [showDeleteAttackModal, setShowDeleteAttackModal] = useState(false);\r\n  const compareRef = useRef(null);\r\n  const editRef = useRef(null);\r\n  const deleteRef = useRef(null);\r\n\r\n  let attack=props.attack;\r\n\r\n  var editIcon = <svg\r\n    className=\"bi bi-pencil-square attack-control\" \r\n    height=\"16\" \r\n    viewBox=\"0 0 16 16\" \r\n    fill=\"currentColor\" \r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    onClick={()=>{\r\n      props.setAttackToEdit(props.attack)\r\n      props.setShowAttackModal(true);\r\n    }}\r\n    \r\n    onMouseEnter={()=>{setDisplayEditTooltip(!displayEditTooltip)}}\r\n    onMouseLeave={()=>{setDisplayEditTooltip(!displayEditTooltip)}}\r\n    ref={editRef}\r\n  >\r\n    <path\r\n      d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"\r\n    />\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"\r\n    />\r\n  </svg>\r\n\r\n  var deleteIcon = <svg\r\n    className=\"attack-control\"\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      setShowDeleteAttackModal(true); \r\n    }}\r\n    height=\"16\" \r\n    viewBox=\"0 0 16 16\" \r\n    fill=\"currentColor\" \r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    onMouseEnter={()=>{setDisplayDeleteTooltip(!displayDeleteTooltip)}}\r\n    onMouseLeave={()=>{setDisplayDeleteTooltip(!displayDeleteTooltip)}}\r\n    ref={deleteRef}\r\n  >\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" \r\n    />\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M5.23 5.146a.5.5 0 0 0 0 .708l5 5a.5.5 0 0 0 .707-.708l-5-5a.5.5 0 0 0-.708 0z\"\r\n    />\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M10.937 5.146a.5.5 0 0 1 0 .708l-5 5a.5.5 0 0 1-.708-.708l5-5a.5.5 0 0 1 .707 0z\"\r\n    />\r\n  </svg>\r\n\r\n  var deleteAttackModal = <Modal\r\n    show={showDeleteAttackModal}\r\n    centered\r\n    onHide={() => {\r\n      setShowDeleteAttackModal(false)\r\n    }}\r\n  >\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>\r\n        Delete Attack\r\n      </Modal.Title>\r\n    </Modal.Header>\r\n    <Container>\r\n      <h3>\r\n        Are you sure you want to delete {props.attack.attackName}?\r\n      </h3>\r\n      <br/>\r\n      <Row className=\"justify-content-around\">\r\n        <button\r\n          className=\"btn btn-outline-dark\"\r\n          onClick={(e)=>{\r\n            e.attackId = props.attack.attackId;\r\n            this.props.handleDeleteAttack(e);\r\n          }}\r\n        >\r\n          <h3>Yes</h3>\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-dark\"\r\n          onClick={()=>{\r\n            setShowDeleteAttackModal(false);\r\n          }}\r\n        >\r\n          <h3>No</h3>\r\n        </button>\r\n      </Row>\r\n      <br/>\r\n    </Container>\r\n  </Modal>\r\n\r\n\r\n\r\n  return (\r\n    <Row className=\"attack\">\r\n      <Col xs=\"4\" sm=\"3\" md=\"2\" className=\"attack-name\">\r\n        {attack.attackName}\r\n      </Col>\r\n      <Col xs=\"2\" sm=\"5\" md=\"7\" lg=\"8\">\r\n        <Row>\r\n          <Col className=\"attack-damage\">\r\n            {attack.firstAttack?.modifier}/{attack.firstAttack?.damage}\r\n          </Col>\r\n          <Col className=\"attack-damage\">\r\n            {attack.secondAttack?.modifier}/{attack.secondAttack?.damage}\r\n          </Col>\r\n          <Col className=\"attack-damage\">\r\n            {attack.thirdAttack?.modifier}/{attack.thirdAttack?.damage}\r\n          </Col>\r\n          <Col className=\"attack-damage\">\r\n            {attack.fourthAttack?.modifier}/{attack.fourthAttack?.damage}\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Col \r\n        className=\"attack-controls\"\r\n        xs=\"6\"\r\n        sm=\"4\"\r\n        md=\"3\"\r\n        lg=\"2\"\r\n        xl=\"2\"\r\n      >\r\n        <Row className=\"ml-auto mr-0 justify-content-between\">\r\n          <Col className=\"checkbox-container\">            \r\n            <div \r\n              className={`dummy-checkbox ${attack.compare ? \"dummy-checkbox-checked\" : \"\"}`}\r\n              onClick={() => {\r\n                props.changeComparison(attack.attackId, !attack.compare)\r\n              }}\r\n              ref={compareRef}\r\n              onMouseEnter={()=>{setDisplayCompareTooltip(!displayCompareTooltip)}}\r\n              onMouseLeave={()=>{setDisplayCompareTooltip(!displayCompareTooltip)}}\r\n            >\r\n              <span className=\"checkbox-span\">\r\n                {attack.compare ? <span>◢</span> : \"\"}\r\n              </span>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            {editIcon}\r\n          </Col>\r\n          <Col>\r\n            {deleteIcon}\r\n          </Col>\r\n        </Row>\r\n        \r\n        {deleteAttackModal}\r\n\r\n        <Overlay \r\n          show={displayCompareTooltip} \r\n          placement=\"left\" \r\n          target={compareRef.current}\r\n        >\r\n          {(props) => (\r\n            <Tooltip {...props}>\r\n              Compare?\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n        <Overlay \r\n          show={displayEditTooltip} \r\n          placement=\"left\" \r\n          target={editRef.current}\r\n        >\r\n          {(props) => (\r\n            <Tooltip {...props}>\r\n              Edit?\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n        <Overlay \r\n          show={displayDeleteTooltip} \r\n          placement=\"left\" \r\n          target={deleteRef.current}\r\n        >\r\n          {(props) => (\r\n            <Tooltip {...props}>\r\n              Delete?\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CharacterBar;","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport {Line} from 'react-chartjs-2';\r\nimport {averageResult, critDamage} from '../DiceProbs.js'\r\n\r\nfunction Comparison(props) {\r\n  let characters = props.characters;\r\n  let attacks = [];\r\n\r\n  characters.forEach((character) => {\r\n    character.attacks.forEach((attack) => {\r\n      if (attack.compare === true) {\r\n        let compAttack = Object.assign({}, {\r\n          characterName: character.name\r\n        }, attack)\r\n        attacks.push(compAttack)\r\n      }\r\n    })\r\n  })\r\n\r\n  let renderedAttacks = attacks.map(attack => {\r\n    return(\r\n      <Row \r\n        className=\"comp-attack\" \r\n        key={`attack-comparison-${attack.attackId}`} \r\n      >\r\n        <Col>\r\n          {attack.characterName}-{attack.attackName}\r\n        </Col>\r\n        <Col>\r\n          {attack.firstAttack.modifier}/{attack.firstAttack.damage}\r\n        </Col>\r\n        <Col>\r\n          {attack.secondAttack.modifier}/{attack.secondAttack.damage}\r\n        </Col>\r\n        <Col>\r\n          {attack.thirdAttack.modifier}/{attack.thirdAttack.damage}\r\n        </Col>\r\n        <Col>\r\n          {attack.fourthModifier}/{attack.fourthAttack.damage}\r\n        </Col>\r\n      </Row>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <Container className=\"comparison\">\r\n      <h2 style={{textAlign: 'center'}}>\r\n        Attack Comparison\r\n      </h2>\r\n      <h5 style={{textAlign: 'center'}}> ―Attacks― </h5>\r\n      {renderedAttacks}\r\n      <LineGraph attacks={props.attacks} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction LineGraph(props) {\r\n\r\n  function processAttack(attack) {\r\n    let {characterName, attackName, firstAttack, secondAttack, thirdAttack, fourthAttack} = attack;\r\n\r\n    let ACRange = [];\r\n    for (let i=0; i<31; i++) {\r\n      ACRange.push(i);\r\n    }\r\n\r\n    let dataset;\r\n\r\n    dataset = ACRange.map(ac => {\r\n      let avg = 0;\r\n      for (let att of [firstAttack, secondAttack, thirdAttack, fourthAttack]) {\r\n        let successes = regularSuccessCount(att.modifier, ac);\r\n        let averageDamage = att.averageDamageRoll || 0;\r\n        let averageCrit = att.averageCrit || 0;\r\n\r\n        avg += ((successes * averageDamage) + averageCrit)/20;\r\n      }\r\n\r\n      return {\r\n        characterName,\r\n        attackName,\r\n        expectedDamage: avg,\r\n        AC: ac,\r\n      }\r\n    })\r\n\r\n    return dataset;\r\n  }\r\n\r\n  let borderColors = [\r\n    'black',\r\n    'red',\r\n    'green',\r\n    'blue'\r\n  ]\r\n\r\n  // Need to construct a dataset out of each attack\r\n  var datasets = props?.attacks?.map((attack, i) => {\r\n    var borderColor = borderColors[i % borderColors.length]\r\n    var {characterName, attackName} = attack\r\n    var label = `${characterName} - ${attackName}`;\r\n\r\n    var data = processAttack(attack).map(a => (Math.round(1000 * a.expectedDamage))/1000);\r\n\r\n    return {\r\n      borderColor,\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      label,\r\n      data,\r\n      lineTension: 0\r\n    }\r\n  })\r\n\r\n  var lineChart = (\r\n    <Line \r\n      data={{\r\n        labels: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],\r\n        datasets: datasets\r\n      }}\r\n      options={{\r\n        scales: {\r\n          yAxes: [{\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Avg. Proj. Damage',\r\n              fontFamily: 'Alegreya SC',\r\n              fontSize: '18'\r\n            }\r\n          }],\r\n          xAxes: [{\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Targeted Armor Class',\r\n              fontFamily: 'Alegreya SC',\r\n              fontSize: '18'\r\n            }\r\n          }]\r\n        },\r\n        legend: {\r\n          labels: {\r\n            fontFamily: 'Alegreya SC'\r\n          }\r\n        }\r\n      }}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <Container xs=\"12\">\r\n      <br/>\r\n      <h5 style={{textAlign: 'center'}}>\r\n        ―Attack Comparison Against AC Values―\r\n      </h5>\r\n      {lineChart}\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction minRoll(rollStr) {\r\n  if (rollStr===\"\") return 0;\r\n  let dice = rollStr.split(/d/i)[0];\r\n  return Number(dice);\r\n}\r\n\r\nfunction maxRoll(rollStr) {\r\n  if (rollStr===\"\") return 0;\r\n  let [dice, dieSize] = rollStr.split(/d/i);\r\n  return (Number(dice) * (Number(dieSize) || 1));\r\n}\r\n\r\nfunction averageRoll(rollStr) {\r\n  return (minRoll(rollStr) + maxRoll(rollStr)) / 2;\r\n}\r\n\r\nfunction averageDamage(damage) {\r\n  damage = damage || \"\"\r\n  let components = damage.split(\"+\");\r\n  let averageSum = 0;\r\n\r\n  for (let component of components) {\r\n    if (component.match(/d/i)) {\r\n      averageSum = averageSum + averageRoll(component);\r\n    } else {\r\n      averageSum = averageSum + Number(component);\r\n    }\r\n  }\r\n\r\n  return averageSum;\r\n}\r\n\r\n// No longer necessary\r\nfunction projectedDamage(modifier, damage, AC) {\r\n  if (damage === \"\") return 0;\r\n  modifier = Number(modifier);\r\n  let averageNormalDamage = averageDamage(damage);\r\n  let averageDamageRolls = [];\r\n  for (let attackRoll = 1; attackRoll<=20; attackRoll++) {\r\n    if (attackRoll === 1) averageDamageRolls.push(0);\r\n    else if (attackRoll === 20) averageDamageRolls.push(averageResult(critDamage(damage)))\r\n    else {\r\n      if (attackRoll+modifier<AC) averageDamageRolls.push(0);\r\n      else averageDamageRolls.push(averageNormalDamage);\r\n    }\r\n  }\r\n  return averageDamageRolls.reduce((a,b) => a+b)/20;\r\n}\r\n\r\nfunction regularSuccessCount(modifier, AC) {\r\n  return Math.min(Math.max(20-(AC-modifier), 0), 18)\r\n}\r\n\r\nexport default Comparison;\r\n","import React from 'react';\nimport {Row, Col, Modal, Form, Navbar} from 'react-bootstrap'\nimport CharacterBar from './components/character-bar';\nimport Comparison from './components/comparison';\nimport {averageResultFromRollObj, totalCritRollResultObj, totalRollResultObj} from './DiceProbs.js'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCharacterModal: false,\n      charModalName: '',\n      characters: [],\n      createTrueEditFalse: true,\n      editId: null,\n      nextID: 1,\n    }\n  }\n\n  editCharacter = (charId) => {\n    var charName = this.state.characters.find(cha => {\n      return (cha.id===charId)\n    }).name\n\n    this.setState({\n      showCharacterModal : true,\n      charModalName: charName,\n      createTrueEditFalse: false,\n      editId: charId\n    })\n  }\n  \n  handleCreateCharacter = (e) => { \n    e.preventDefault();\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n    charsCopy.push({\n      name: this.state.charModalName,\n      attacks: [],\n      id: this.state.nextID\n    })\n    this.setState({\n      showCharacterModal: false,\n      charModalName: '',\n      characters: charsCopy,\n      createTrueEditFalse: true,\n      nextID: this.state.nextID+1,\n      editId: null\n    })\n  }\n\n  handleEditCharacter = (e) => {\n    e.preventDefault();\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n\n    let character = charsCopy.find(cha => {\n      return (cha.id === this.state.editId);\n    })\n\n    character.name = this.state.charModalName;\n\n    this.setState({\n      showCharacterModal: false,\n      charModalName: '',\n      createTrueEditFalse: true,\n      characters: charsCopy,\n      editId: null\n    })\n  }\n\n  handleDeleteCharacter = (charId) => {\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n\n    charsCopy = charsCopy.filter(cha => {\n      if (cha.id === charId) return false;\n      else return true;\n    })\n\n    this.setState({\n      showCharacterModal: false,\n      charModalName: '',\n      characters: charsCopy,\n      createTrueEditFalse: true,\n      nextID: this.state.nextID+1,\n      editId: null\n    })\n  }\n\n  handleAddAttack = (e) => {\n    e.preventDefault();\n\n    var {charId, attackName, firstAttackModifier, firstAttackDamage, secondAttackModifier, secondAttackDamage, thirdAttackModifier, thirdAttackDamage, fourthAttackModifier, fourthAttackDamage} = e.formData;\n\n    let characters = JSON.parse(JSON.stringify(this.state.characters));\n    let character = characters.find(c => c.id===charId);\n\n    let attackId=this.state.nextID;\n\n    character.attacks.push({\n      attackName, \n      attackId, \n      firstAttack: this.createAttack(firstAttackModifier, firstAttackDamage),\n      secondAttack: this.createAttack(secondAttackModifier, secondAttackDamage),\n      thirdAttack: this.createAttack(thirdAttackModifier, thirdAttackDamage),\n      fourthAttack: this.createAttack(fourthAttackModifier, fourthAttackDamage),\n      compare: false\n    })\n\n    this.setState({\n      characters,\n      nextID: this.state.nextID+1\n    })\n  }\n\n  handleEditAttack = (e) => {\n    e.preventDefault();\n\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n\n    for (let character of charsCopy) {\n      for (let attackIndex in character.attacks) {\n        let attack = character.attacks[attackIndex]\n        if (attack.attackId === e.formData.attackId) {\n          this.updateAttack(character.attacks[attackIndex].firstAttack, e.formData.firstAttackModifier, e.formData.firstAttackDamage) \n          \n          this.updateAttack(character.attacks[attackIndex].secondAttack, e.formData.secondAttackModifier, e.formData.secondAttackDamage) \n\n          this.updateAttack(character.attacks[attackIndex].thirdAttack, e.formData.thirdAttackModifier, e.formData.thirdAttackDamage) \n\n          this.updateAttack(character.attacks[attackIndex].fourthAttack, e.formData.fourthAttackModifier, e.formData.fourthAttackDamage) \n\n          character.attacks[attackIndex].attackName = e.formData.attackName;\n          break;\n        }\n      }\n    }\n    this.setState({characters: charsCopy})\n  }\n\n  handleDeleteAttack = (e) => {\n    e.preventDefault();\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n\n    for (let character of charsCopy) {\n      for (let attackIndex in character.attacks) {\n        if (character.attacks[attackIndex].attackId === e.attackId) {\n          character.attacks.splice(attackIndex, 1);\n          break;\n        }\n      }\n    }\n\n    this.setState({characters: charsCopy})\n  }\n\n\n  changeComparison = (attackId, checked) => {\n    let characters = JSON.parse(JSON.stringify(this.state.characters));\n\n    for (let character of characters) {\n      for (let attack of character.attacks) {\n        if (attack.attackId === attackId) {\n          attack.compare = checked;\n          this.setState({characters})\n        }\n      }\n    }\n  }\n\n  createAttack = (mod, damage) => {\n    return {\n      modifier: mod,\n      damage: damage,\n      averageCrit: averageResultFromRollObj(totalCritRollResultObj(damage)) || 0,\n      averageDamageRoll: averageResultFromRollObj(totalRollResultObj(damage)) || 0,\n    }\n  }\n\n  updateAttack = (attack, newMod, newDamage) => {\n    if (attack.modifier !== newMod || attack.damage !== newDamage) {\n  \n      attack.averageCrit = averageResultFromRollObj(totalCritRollResultObj(newDamage))\n  \n      attack.averageDamageRoll = averageResultFromRollObj(totalRollResultObj(newDamage))\n  \n      attack.modifier = newMod;\n      attack.damage = newDamage;\n    }\n  }\n\n  render() {\n    let characters = this.state.characters.map(char => {\n      return (\n        <CharacterBar \n          char={char} \n          key={char.id} \n          handleAddAttack={this.handleAddAttack}\n          handleEditAttack={this.handleEditAttack}\n          handleDeleteAttack={this.handleDeleteAttack}\n          changeComparison={this.changeComparison}\n          editCharacter={this.editCharacter}\n          handleDeleteCharacter={this.handleDeleteCharacter}\n        />\n      )\n    })\n    \n    let attacks = [];\n    for (let char of this.state.characters) {\n      for (let attack of char.attacks) {\n        if (attack.compare) {\n          let attackOut = Object.assign({}, attack, {\n            characterName: char.name\n          })\n          attacks.push(attackOut);\n        }\n      }\n    }\n\n\n    return (\n      <div className=\"app\" id=\"app-body\">\n        <TitleBar>\n          D20 Attack Comparison\n        </TitleBar>\n        <div className=\"add-character-button-div text-center\">\n          <button \n            className=\"btn btn-outline-dark\"\n            onClick={(e) => {\n              this.setState({showCharacterModal: true})\n            }}\n          >\n            <h4>+ Add Character +</h4>\n          </button>\n          <Modal \n            show={this.state.showCharacterModal}\n            onHide={()=>{\n              this.setState({showCharacterModal: false})\n            }}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>\n                {this.state.createTrueEditFalse ? \"Create a Character\" : \"Edit Character\"}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>              \n              <Form \n                className=\"text-center\"\n                onSubmit={this.state.createTrueEditFalse ? this.handleCreateCharacter: this.handleEditCharacter}\n              >\n                <Form.Group \n                  controlId=\"CharacterName\" \n                  as={Row}\n                >\n                  <Form.Label column sm=\"4\">\n                    Character Name\n                  </Form.Label>\n                  <Col sm=\"6\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"CharacterName\"\n                      required\n                      autoComplete=\"off\"\n                      placeholder=\"Character Name\"\n                      onChange={(e)=>{\n                        this.setState({charModalName: e.target.value})\n                      }}\n                      value={this.state.charModalName}\n                    />\n                  </Col>\n                </Form.Group>\n\n                <button className=\"btn btn-outline-dark\" type=\"submit\">\n                  {this.state.createTrueEditFalse ? \"Create\" : \"Update\"}\n                </button>\n                \n              </Form>\n            </Modal.Body>\n          </Modal>\n        </div>\n        {characters}\n        <Comparison \n          characters={this.state.characters} \n          attacks={attacks} \n        />\n      </div>\n    )\n  }\n}\n\n\nfunction TitleBar(props) {\n  return (\n    <Navbar className=\"titlebar\">\n      <h2>{props.children}</h2>\n    </Navbar>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}