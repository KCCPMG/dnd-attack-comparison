{"version":3,"sources":["components/character-bar.js","components/comparison.js","App.js","serviceWorker.js","index.js"],"names":["totalRoll","RegExp","AddAttack","props","Container","className","onClick","setShowAttackModal","showAttackModal","this","hideAttackModal","char","handleAddAttack","attackToEdit","setAttackToEdit","handleEditAttack","React","Component","EditAttackModal","updateDamage","key","value","updatedErrors","JSON","parse","stringify","state","errors","newValue","replace","length","Boolean","match","includes","push","filter","e","setState","clearForm","attackId","attackName","firstAttackModifier","firstAttackDamage","secondAttackModifier","secondAttackDamage","thirdAttackModifier","thirdAttackDamage","fourthAttackModifier","fourthAttackDamage","Modal","show","centered","size","onHide","Header","closeButton","Title","name","Form","Group","controlId","as","Row","Label","Col","Control","type","required","autoComplete","placeholder","onChange","target","AddAttackCol","preventDefault","formData","charId","id","prevProps","prevState","snapshot","prevAttack","Object","assign","currentAttack","sm","md","lg","children","Attack","useState","displayTooltip","setDisplayTooltip","showDeleteAttackModal","setShowDeleteAttackModal","ref","useRef","attack","editIcon","height","viewBox","fill","xmlns","d","fillRule","deleteIcon","deleteAttackModal","handleDeleteAttack","xs","xl","checked","compare","changeComparison","onMouseEnter","onMouseLeave","Overlay","placement","current","Tooltip","CharacterBar","expanded","setExpanded","showDeleteModal","setShowDeleteModal","expandIcon","width","collapseIcon","handleDeleteCharacter","stopPropagation","editCharacter","style","textAlign","attacks","map","at","LineGraph","averageRoll","roll","split","dice","Number","minRoll","dieSize","maxRoll","projectedDamage","modifier","damage","AC","chanceToHit","Math","min","max","components","averageSum","component","averageDamage","borderColors","datasets","i","borderColor","characterName","backgroundColor","label","data","ACRange","ac","expectedDamage","processAttack","a","round","lineChart","labels","options","scales","yAxes","scaleLabel","display","labelString","fontFamily","fontSize","xAxes","legend","Comparison","characters","forEach","character","compAttack","renderedAttacks","TitleBar","Navbar","App","charName","find","cha","showCharacterModal","charModalName","createTrueEditFalse","editId","handleCreateCharacter","charsCopy","nextID","handleEditCharacter","c","attackIndex","console","log","splice","attackOut","Body","onSubmit","column","Button","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20665542.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\r\nimport {Container, Row, Col, Modal, Form, Overlay, Tooltip, Button, Navbar, InputGroup} from 'react-bootstrap'\r\n\r\nvar totalRoll = new RegExp(/^(\\d{1,2}d\\d{1,2})(\\+\\d{1,2}d\\d{1,2})*([-+]\\d{1,2})*$/)\r\n\r\nfunction CharacterBar(props) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [attackToEdit, setAttackToEdit] = useState(null)\r\n  const [showAttackModal, setShowAttackModal] = useState(false)\r\n\r\n\r\n  var expandIcon = <svg \r\n    onClick={() => {setExpanded(true)}}\r\n    width=\"1em\" \r\n    height=\"1em\" \r\n    viewBox=\"0 0 16 16\" \r\n    className=\"bi bi-chevron-down\" \r\n    fill=\"currentColor\" \r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\r\n    />\r\n  </svg>\r\n\r\n  var collapseIcon = <svg \r\n    onClick={() => {setExpanded(false)}}\r\n    width=\"1em\" \r\n    height=\"1em\" \r\n    viewBox=\"0 0 16 16\" \r\n    className=\"bi bi-chevron-up\" \r\n    fill=\"currentColor\" \r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"\r\n    />\r\n  </svg>\r\n\r\n  var deleteIcon = <svg \r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      setShowDeleteModal(true);\r\n    }}\r\n    width=\"1em\" \r\n    height=\"1em\" \r\n    viewBox=\"0 0 16 16\" \r\n    className=\"\" \r\n    fill=\"currentColor\" \r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" \r\n    />\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M5.23 5.146a.5.5 0 0 0 0 .708l5 5a.5.5 0 0 0 .707-.708l-5-5a.5.5 0 0 0-.708 0z\"\r\n    />\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M10.937 5.146a.5.5 0 0 1 0 .708l-5 5a.5.5 0 0 1-.708-.708l5-5a.5.5 0 0 1 .707 0z\"\r\n    />\r\n    <Modal\r\n      show={showDeleteModal}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          Delete Character\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Container>\r\n        <h3>\r\n          Are you sure you want to delete {props.char.name}?\r\n        </h3>\r\n        <br/>\r\n        <Row className=\"justify-content-around\">\r\n          <button\r\n            className=\"btn btn-outline-dark\"\r\n            onClick={()=>{\r\n              props.handleDeleteCharacter(props.char.id)\r\n            }}\r\n          >\r\n            <h3>Yes</h3>\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-dark\"\r\n            onClick={(e)=>{\r\n              setShowDeleteModal(false)\r\n              e.stopPropagation();\r\n            }}\r\n          >\r\n            <h3>No</h3>\r\n          </button>\r\n        </Row>\r\n        <br/>\r\n        \r\n      </Container>\r\n\r\n    </Modal>\r\n  </svg>\r\n\r\n  var editIcon = <svg \r\n    // width=\"1em\" \r\n    height=\"20\" \r\n    viewBox=\"0 0 16 16\" \r\n    className=\"bi bi-pencil-square\" \r\n    fill=\"currentColor\" \r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    onClick={()=>{props.editCharacter(props.char.id)}}\r\n  >\r\n    <path\r\n      d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"\r\n    />\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"\r\n    />\r\n  </svg>\r\n\r\n  return (\r\n    <Container className=\"character-bar\" >\r\n      <Row \r\n        className=\"character-bar-heading\"\r\n        // as={Row}\r\n      >\r\n        <Col className=\"character-name\">\r\n          {props.char.name}\r\n        </Col>\r\n        {/* <Col md=\"auto\"/> */}\r\n        <Col\r\n          // as={Col}\r\n          // cs=\"3\" // What is this? typo?\r\n          xs=\"7\"\r\n          sm=\"4\"\r\n          md=\"3\"\r\n          lg=\"3\"\r\n          xl=\"2\"\r\n          className=\"expand-toggle ml-auto mr-0 justify-content-between\"  \r\n          // onClick={() => {setExpanded(!expanded)}};\r\n        >\r\n          {/* <h3 \r\n            style={{display: 'inline'}}\r\n            onClick={()=>{\r\n              setExpanded(!expanded);\r\n            }}\r\n          >\r\n            {expanded ? \"-\" : \"+\"}\r\n          </h3> */}\r\n          {/* <img src=\"../assets/edit-icon.svg\" alt=\"\" title=\"Edit Icon\" /> */}\r\n\r\n          <Row>\r\n            <Col>\r\n              {expanded ? collapseIcon : expandIcon}\r\n            </Col>\r\n            <Col>\r\n              {editIcon}\r\n            </Col>\r\n            <Col>\r\n              {deleteIcon}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      {expanded ? <h5 style={{textAlign: 'center'}}> ―Attacks― </h5> : ''}\r\n      {expanded ? props.char.attacks.map(at => {\r\n        return (\r\n          <Attack \r\n            attack={at} \r\n            key={at.attackId} \r\n            changeComparison={props.changeComparison}\r\n            setAttackToEdit={setAttackToEdit}\r\n            setShowAttackModal={setShowAttackModal}\r\n            handleDeleteAttack={props.handleDeleteAttack}\r\n          />\r\n        )\r\n      }) : \"\"}\r\n      {expanded ? <AddAttack \r\n        handleAddAttack={props.handleAddAttack} \r\n        handleEditAttack={props.handleEditAttack}\r\n        char={props.char}\r\n        setExpanded={setExpanded}\r\n        attackToEdit={attackToEdit}\r\n        showAttackModal={showAttackModal}\r\n        setAttackToEdit={setAttackToEdit}\r\n        setShowAttackModal={setShowAttackModal}\r\n      /> : \"\"}\r\n    </Container>\r\n  )\r\n}\r\n\r\nclass AddAttack extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n    //   showAttackModal: false,\r\n    // }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Container className=\"add-attack\">\r\n        <div className=\"add-attack-button-div text-center\">\r\n          <button \r\n            className=\"btn btn-outline-dark add-attack-button\"\r\n            // data-toggle=\"modal\"\r\n            // data-target=\"#exampleModal\"\r\n            onClick={() => {\r\n              // console.log(\"attack modal shown\");\r\n              \r\n              this.props.setShowAttackModal(true)\r\n              // ({showAttackModal: true})\r\n            }}\r\n          >\r\n            <h5>+ Add Attack +</h5>\r\n          </button>\r\n          <br/>\r\n        </div>\r\n        <EditAttackModal \r\n          showAttackModal={this.props.showAttackModal}\r\n          hideAttackModal={()=>{this.props.setShowAttackModal(false)}}\r\n\r\n          // showAttackModal={this.state.showAttackModal}\r\n          // hideAttackModal={()=>{this.setState({showAttackModal : false})}}\r\n          char={this.props.char}\r\n          handleAddAttack={this.props.handleAddAttack}\r\n          attackToEdit={this.props.attackToEdit}\r\n          setAttackToEdit={this.props.setAttackToEdit}\r\n          handleEditAttack={this.props.handleEditAttack}\r\n        />\r\n        \r\n        \r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass EditAttackModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      attackName: '',\r\n      firstAttackModifier: '',\r\n      firstAttackDamage: '',\r\n      secondAttackModifier: '',\r\n      secondAttackDamage: '',\r\n      thirdAttackModifier: '',\r\n      thirdAttackDamage: '',\r\n      fourthAttackModifier: '',\r\n      fourthAttackDamage: '',\r\n      errors: []\r\n    }\r\n  }\r\n\r\n  updateDamage = (key, value) => {\r\n    let updatedErrors = JSON.parse(\r\n      JSON.stringify(this.state.errors)\r\n    );\r\n\r\n    let newValue = value.replace(/ /g, '');\r\n    let error;\r\n    \r\n    (newValue.length > 0) ? error = !Boolean(newValue.match(totalRoll)) : error = false\r\n\r\n    if (error) {\r\n      if (!updatedErrors.includes(key)) {\r\n        updatedErrors.push(key);\r\n      }\r\n    } else {\r\n      updatedErrors = updatedErrors.filter(e => {\r\n        if (e===key) return false;\r\n        else return true;\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      [key]: value,\r\n      errors: updatedErrors\r\n    })\r\n  }\r\n\r\n  clearForm = () => {\r\n    this.setState({\r\n      attackId: null,\r\n      attackName: '',\r\n      firstAttackModifier: '',\r\n      firstAttackDamage: '',\r\n      secondAttackModifier: '',\r\n      secondAttackDamage: '',\r\n      thirdAttackModifier: '',\r\n      thirdAttackDamage: '',\r\n      fourthAttackModifier: '',\r\n      fourthAttackDamage: '',\r\n      errors: []\r\n    }, this.props.setAttackToEdit(null))\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Modal\r\n        show={this.props.showAttackModal}\r\n        centered\r\n        size=\"lg\"\r\n        // className=\"modal-lg\"\r\n        onHide={()=>{\r\n          // console.log(\"hidden\");\r\n          this.clearForm();\r\n          this.props.hideAttackModal();\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Add Attack - {this.props.char.name}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <br/>\r\n        <Container>\r\n          <Form>\r\n            <Form.Group \r\n              controlId=\"CharacterName\" \r\n              as={Container}\r\n            >\r\n              <Row>\r\n                <Form.Label as={Col}>\r\n                  Attack Name\r\n                </Form.Label>\r\n                <Col>\r\n                  <Form.Control\r\n                    // sm=\"6\"\r\n                    type=\"text\"\r\n                    name=\"AttackName\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Attack Name\"\r\n                    value={this.state.attackName}\r\n                    onChange={(e)=>{this.setState({\r\n                      attackName: e.target.value\r\n                    })}}\r\n                    \r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                First Attack\r\n              </Row>\r\n              <Row>\r\n                <Form.Label as={AddAttackCol} >\r\n                  Attack Modifier\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"FirstAttackModifier\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 3\"\r\n                    value={this.state.firstAttackModifier}\r\n                    onChange={(e)=>{this.setState({\r\n                      firstAttackModifier: e.target.value\r\n                    })}}\r\n                  />\r\n                </AddAttackCol>\r\n                <Form.Label as={AddAttackCol}>\r\n                  Damage Dice\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"FirstAttackDamage\"\r\n                    className={(this.state.errors.includes(\"firstAttackDamage\")) ? \"is-invalid\" : \"\"}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 2d8 + 1d4 + 5\"\r\n                    value={this.state.firstAttackDamage}\r\n                    onChange={(e)=>{this.updateDamage(\"firstAttackDamage\", e.target.value)}}\r\n                  />\r\n                </AddAttackCol>\r\n              </Row>\r\n\r\n\r\n              {/* Second Attack */}\r\n              <Row>\r\n                Second Attack\r\n              </Row>\r\n              <Row>\r\n                <Form.Label as={AddAttackCol} >\r\n                  Attack Modifier\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"SecondAttackModifier\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 3\"\r\n                    value={this.state.secondAttackModifier}\r\n                    onChange={(e)=>{this.setState({\r\n                      secondAttackModifier: e.target.value\r\n                    })}}\r\n                  />\r\n                </AddAttackCol>\r\n                <Form.Label as={AddAttackCol}>\r\n                  Damage Dice\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"SecondAttackDamage\"\r\n                    className={(this.state.errors.includes(\"secondAttackDamage\")) ? \"is-invalid\" : \"\"}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 2d8 + 1d4 + 5\"\r\n                    value={this.state.secondAttackDamage}\r\n                    onChange={(e)=>{this.updateDamage(\"secondAttackDamage\", e.target.value)}}\r\n                  />\r\n                </AddAttackCol>\r\n              </Row>\r\n\r\n              {/* Third Attack */}\r\n              <Row>\r\n                Third Attack\r\n              </Row>\r\n              <Row>\r\n                <Form.Label as={AddAttackCol} >\r\n                  Attack Modifier\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"ThirdAttackModifier\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 3\"\r\n                    value={this.state.thirdAttackModifier}\r\n                    onChange={(e)=>{this.setState({\r\n                      thirdAttackModifier: e.target.value\r\n                    })}}\r\n                  />\r\n                </AddAttackCol>\r\n                <Form.Label as={AddAttackCol}>\r\n                  Damage Dice\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"ThirdAttackDamage\"\r\n                    className={(this.state.errors.includes(\"thirdAttackDamage\")) ? \"is-invalid\" : \"\"}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 2d8 + 1d4 + 5\"\r\n                    value={this.state.thirdAttackDamage}\r\n                    onChange={(e)=>{this.updateDamage(\"thirdAttackDamage\", e.target.value)}}\r\n                  />\r\n                </AddAttackCol>\r\n              </Row>\r\n\r\n              {/* Fourth Attack  */}\r\n              <Row>\r\n                Fourth Attack\r\n              </Row>\r\n              <Row>\r\n                <Form.Label as={AddAttackCol} >\r\n                  Attack Modifier\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"fourthAttackModifier\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 3\"\r\n                    value={this.state.fourthAttackModifier}\r\n                    onChange={(e)=>{this.setState({\r\n                      fourthAttackModifier: e.target.value\r\n                    })}}\r\n                  />\r\n                </AddAttackCol>\r\n                <Form.Label as={AddAttackCol}>\r\n                  Damage Dice\r\n                </Form.Label>\r\n                <AddAttackCol>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"FourthAttackDamage\"\r\n                    className={(this.state.errors.includes(\"fourthAttackDamage\")) ? \"is-invalid\" : \"\"}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ex: 2d8 + 1d4 + 5\"\r\n                    value={this.state.fourthAttackDamage}\r\n                    onChange={(e)=>{this.updateDamage(\"fourthAttackDamage\", e.target.value)}}\r\n                  />\r\n                </AddAttackCol>\r\n              </Row>\r\n              <br/>\r\n              <Row className=\"justify-conent-md-center\">\r\n                <Col className=\"text-center\">\r\n                  {this.state.errors.length===0 ? <button \r\n                  className=\"btn btn-outline-dark\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n\r\n                    let {attackName, firstAttackModifier, firstAttackDamage, secondAttackModifier, secondAttackDamage, thirdAttackModifier, thirdAttackDamage, fourthAttackModifier, fourthAttackDamage} = this.state;\r\n\r\n                    e.formData = {\r\n                      charId: this.props.char.id,\r\n                      attackName,\r\n                      firstAttackModifier,\r\n                      firstAttackDamage,\r\n                      secondAttackModifier,\r\n                      secondAttackDamage,\r\n                      thirdAttackModifier,\r\n                      thirdAttackDamage,\r\n                      fourthAttackModifier,\r\n                      fourthAttackDamage,\r\n                    }\r\n\r\n                    if (this.state.attackId) {\r\n                      e.formData.attackId = this.state.attackId;\r\n                      this.props.handleEditAttack(e);\r\n                    } else {\r\n                      this.props.handleAddAttack(e);\r\n                    }\r\n                    \r\n                    this.clearForm();\r\n                    this.props.hideAttackModal();\r\n                  }}\r\n                  >\r\n                    {this.state.attackId ? \"Edit\" : \"Add\"} Attack\r\n                  </button> : null}\r\n                  <br/>\r\n                </Col>\r\n              </Row>\r\n            \r\n            </Form.Group>\r\n          </Form>\r\n        </Container>\r\n\r\n      </Modal>\r\n    )    \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    let prevAttack = Object.assign({}, prevProps.attackToEdit)\r\n    let currentAttack = Object.assign({}, this.props.attackToEdit)\r\n\r\n    if (JSON.stringify(prevAttack) !== JSON.stringify(currentAttack)) {\r\n      this.setState({\r\n        attackId: currentAttack.attackId,\r\n        attackName: currentAttack.attackName,\r\n        firstAttackModifier: currentAttack.firstAttackModifier,\r\n        firstAttackDamage: currentAttack.firstAttackDamage,\r\n        secondAttackModifier: currentAttack.secondAttackModifier,\r\n        secondAttackDamage: currentAttack.secondAttackDamage,\r\n        thirdAttackModifier: currentAttack.thirdAttackModifier,\r\n        thirdAttackDamage: currentAttack.thirdAttackDamage,\r\n        fourthAttackModifier: currentAttack.fourthAttackModifier,\r\n        fourthAttackDamage: currentAttack.fourthAttackDamage,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction AddAttackCol(props) {\r\n  return (\r\n    <Col sm={5} md={3} lg={3}>\r\n      {props.children}\r\n    </Col>\r\n  )\r\n}\r\n\r\nfunction Attack(props) {\r\n  const [displayTooltip, setDisplayTooltip] = useState(false);\r\n  const [showDeleteAttackModal, setShowDeleteAttackModal] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  let attack=props.attack;\r\n\r\n  var editIcon = <svg\r\n    className=\"bi bi-pencil-square attack-control\" \r\n    height=\"16\" \r\n    viewBox=\"0 0 16 16\" \r\n    fill=\"currentColor\" \r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    onClick={()=>{\r\n      props.setAttackToEdit(props.attack)\r\n      props.setShowAttackModal(true);\r\n    }}\r\n  >\r\n    <path\r\n      d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"\r\n    />\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"\r\n    />\r\n  </svg>\r\n\r\n  var deleteIcon = <svg\r\n    className=\"attack-control\"\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      setShowDeleteAttackModal(true); \r\n    }}\r\n    height=\"16\" \r\n    viewBox=\"0 0 16 16\" \r\n    fill=\"currentColor\" \r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" \r\n    />\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M5.23 5.146a.5.5 0 0 0 0 .708l5 5a.5.5 0 0 0 .707-.708l-5-5a.5.5 0 0 0-.708 0z\"\r\n    />\r\n    <path \r\n      fillRule=\"evenodd\" \r\n      d=\"M10.937 5.146a.5.5 0 0 1 0 .708l-5 5a.5.5 0 0 1-.708-.708l5-5a.5.5 0 0 1 .707 0z\"\r\n    />\r\n  </svg>\r\n\r\n  var deleteAttackModal = <Modal\r\n    show={showDeleteAttackModal}\r\n    centered\r\n    onHide={() => {\r\n      setShowDeleteAttackModal(false)\r\n    }}\r\n  >\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>\r\n        Delete Attack\r\n      </Modal.Title>\r\n    </Modal.Header>\r\n    <Container>\r\n      <h3>\r\n        Are you sure you want to delete {props.attack.attackName}?\r\n      </h3>\r\n      <br/>\r\n      <Row className=\"justify-content-around\">\r\n        <button\r\n          className=\"btn btn-outline-dark\"\r\n          onClick={(e)=>{\r\n            e.attackId = props.attack.attackId;\r\n            props.handleDeleteAttack(e);\r\n          }}\r\n        >\r\n          <h3>Yes</h3>\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-dark\"\r\n          onClick={()=>{\r\n            setShowDeleteAttackModal(false);\r\n          }}\r\n        >\r\n          <h3>No</h3>\r\n        </button>\r\n      </Row>\r\n      <br/>\r\n      \r\n    </Container>\r\n\r\n  </Modal>\r\n\r\n\r\n\r\n  return (\r\n    <Row className=\"attack\">\r\n      <Col>\r\n        {attack.attackName}\r\n      </Col>\r\n      <Col>\r\n        {attack.firstAttackModifier}/{attack.firstAttackDamage}\r\n      </Col>\r\n      <Col>\r\n        {attack.secondAttackModifier}/{attack.secondAttackDamage}\r\n      </Col>\r\n      <Col>\r\n        {attack.thirdAttackModifier}/{attack.thirdAttackDamage}\r\n      </Col>\r\n      <Col>\r\n        {attack.fourthAttackModifier}/{attack.fourthAttackDamage}\r\n      </Col>\r\n      <Col \r\n        className=\"attack-controls\"\r\n        xs=\"7\"\r\n        sm=\"4\"\r\n        md=\"3\"\r\n        lg=\"2\"\r\n        xl=\"2\"\r\n      >\r\n        <Row \r\n          className=\"ml-auto mr-0 justify-content-between\" \r\n        >\r\n          <Col>\r\n            <input\r\n              className=\"attack-control\"\r\n              ref={ref}\r\n              type=\"checkbox\"\r\n              checked={attack.compare}\r\n              onChange={(e)=>{\r\n                // console.log(attack.attackName,e.target.checked)\r\n                props.changeComparison(attack.attackId, e.target.checked);\r\n              }} \r\n              onMouseEnter={()=>{setDisplayTooltip(!displayTooltip)}}\r\n              onMouseLeave={()=>{setDisplayTooltip(!displayTooltip)}}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            {editIcon}\r\n          </Col>\r\n          <Col>\r\n            {deleteIcon}\r\n          </Col>\r\n        </Row>\r\n        \r\n        {deleteAttackModal}\r\n\r\n        <Overlay \r\n          show={displayTooltip} \r\n          placement=\"right\" \r\n          target={ref.current}\r\n        >\r\n          {(props) => (\r\n            <Tooltip {...props}>\r\n              Compare?\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n      </Col>\r\n\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CharacterBar;","import React, {useState} from 'react';\r\nimport {Container, Row, Col, Modal, Form, Button, Navbar, InputGroup} from 'react-bootstrap'\r\nimport { Chart, Line } from 'react-chartjs-2';\r\n\r\nfunction Comparison(props) {\r\n  let characters = props.characters;\r\n  let attacks = [];\r\n\r\n  characters.forEach((character) => {\r\n    character.attacks.forEach((attack) => {\r\n      if (attack.compare === true) {\r\n        let compAttack = Object.assign({}, {\r\n          characterName: character.name\r\n        }, attack)\r\n        attacks.push(compAttack)\r\n      }\r\n    })\r\n  })\r\n\r\n  let renderedAttacks = attacks.map(attack => {\r\n    return(\r\n      <Row \r\n        className=\"comp-attack\" \r\n        key={`attack-comparison-${attack.attackId}`} \r\n      >\r\n        <Col>\r\n          {attack.characterName}-{attack.attackName}\r\n        </Col>\r\n        <Col>\r\n          {attack.firstAttackModifier}/{attack.firstAttackDamage}\r\n        </Col>\r\n        <Col>\r\n          {attack.secondAttackModifier}/{attack.secondAttackDamage}\r\n        </Col>\r\n        <Col>\r\n          {attack.thirdAttackModifier}/{attack.thirdAttackDamage}\r\n        </Col>\r\n        <Col>\r\n          {attack.fourthAttackModifier}/{attack.fourthAttackDamage}\r\n        </Col>\r\n\r\n      </Row>\r\n    )\r\n    \r\n  });\r\n\r\n  return (\r\n    <Container className=\"comparison\">\r\n      <h2 style={{textAlign: 'center'}}>\r\n        Attack Comparison\r\n      </h2>\r\n      <h5 style={{textAlign: 'center'}}> ―Attacks― </h5>\r\n      {renderedAttacks}\r\n      <LineGraph attacks={props.attacks} />\r\n    {/* Need to do all the d3 stuff here. Graph y-axis projected damage x-axis target AC\r\n    Add different options for average damage, max damage, min damage? */}\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction LineGraph(props) {\r\n\r\n  // Confirmed\r\n  function minRoll(roll) {\r\n    if (roll===\"\") return 0;\r\n    let [dice, dieSize] = roll.split(/d/i);\r\n    return Number(dice);\r\n  }\r\n\r\n  // Confirmed\r\n  function maxRoll(roll) {\r\n    if (roll===\"\") return 0;\r\n    let [dice, dieSize] = roll.split(/d/i);\r\n    return (Number(dice) * (Number(dieSize) || 1));\r\n  }\r\n\r\n  // Confirmed\r\n  function averageRoll(roll) {\r\n    return (minRoll(roll) + maxRoll(roll)) / 2;\r\n  }\r\n\r\n  // Confirmed\r\n  function averageDamage(damage) {\r\n    damage = damage || \"\"\r\n    let components = damage.split(\"+\");\r\n    let averageSum = 0;\r\n\r\n    for (let component of components) {\r\n      if (component.match(/d/i)) {\r\n        averageSum = averageSum + averageRoll(component);\r\n      } else {\r\n        averageSum = averageSum + Number(component);\r\n      }\r\n    }\r\n\r\n    return averageSum;\r\n  }\r\n\r\n  // Confirmed\r\n  function projectedDamage(modifier, damage, AC) {\r\n    let chanceToHit = (Number(modifier) + 20 - AC) *.05;\r\n    chanceToHit = Math.min(chanceToHit, 1);\r\n    chanceToHit = Math.max(chanceToHit, 0);\r\n    return chanceToHit * averageDamage(damage);\r\n  }\r\n  \r\n  // Given an attack, break down into all components and create dataset to graph\r\n  // Confirmed\r\n  function processAttack(attack) {\r\n    let {characterName, attackName, firstAttackModifier, firstAttackDamage, secondAttackModifier, secondAttackDamage,thirdAttackModifier, thirdAttackDamage, fourthAttackModifier, fourthAttackDamage} = attack;\r\n\r\n    let ACRange = [];\r\n    for (let i=0; i<31; i++) {\r\n      ACRange.push(i);\r\n    }\r\n\r\n    let dataset = ACRange.map(ac => {\r\n      let expectedDamage = projectedDamage(firstAttackModifier, firstAttackDamage, ac) + projectedDamage(secondAttackModifier, secondAttackDamage, ac) + \r\n      projectedDamage(thirdAttackModifier, thirdAttackDamage, ac) + \r\n      projectedDamage(fourthAttackModifier, fourthAttackDamage, ac);\r\n      return {\r\n        characterName, \r\n        attackName, \r\n        expectedDamage,\r\n        AC: ac\r\n      }\r\n    })\r\n\r\n    return dataset;\r\n  }\r\n\r\n  let borderColors = [\r\n    'black',\r\n    'red',\r\n    'green',\r\n    'blue'\r\n  ]\r\n\r\n  // console.log({props})\r\n\r\n  // Need to construct a dataset out of each attack\r\n  var datasets = props?.attacks?.map((attack, i) => {\r\n    \r\n\r\n    var borderColor = borderColors[i % borderColors.length]\r\n\r\n    var {characterName, attackName} = attack\r\n    var label = `${characterName} - ${attackName}`;\r\n\r\n    var data = processAttack(attack).map(a => (Math.round(1000 * a.expectedDamage))/1000);\r\n\r\n    return {\r\n      borderColor,\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      label,\r\n      data\r\n    }\r\n  })\r\n\r\n  // console.log(datasets);\r\n\r\n\r\n  // chartjs\r\n  var PADDING;\r\n  var HEIGHT;\r\n  var WIDTH;\r\n\r\n  var lineChart = (\r\n    <Line \r\n        \r\n      data={{\r\n        labels: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],\r\n        datasets: datasets\r\n      }}\r\n\r\n      options={{\r\n        // title: {\r\n        //   display: true,\r\n        //   text: \"―Attack Comparison Against AC Values―\",\r\n        //   fontFamily: 'Alegreya SC',\r\n        //   fontSize: '20'\r\n        // },\r\n        scales: {\r\n          yAxes: [{\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Avg. Proj. Damage',\r\n              fontFamily: 'Alegreya SC',\r\n              fontSize: '18'\r\n            }\r\n          }],\r\n          xAxes: [{\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Targeted Armor Class',\r\n              fontFamily: 'Alegreya SC',\r\n              fontSize: '18'\r\n            }\r\n          }]\r\n        },\r\n        legend: {\r\n          labels: {\r\n            fontFamily: 'Alegreya SC'\r\n          }\r\n        }\r\n      }}\r\n    />\r\n  )\r\n\r\n\r\n\r\n\r\n  // console.log(\"Chart Defaults\", Chart.defaults);\r\n  // console.log(\"Line Chart\", lineChart)\r\n\r\n  return (\r\n    <Container xs=\"12\">\r\n      {/* <Chart \r\n        type=\"line\"\r\n        data={{\r\n          label: \"Huraduradingus\",\r\n          datasets: {\r\n            data: [1,2,3,4,5]\r\n          }\r\n        }}\r\n      /> */}\r\n      <br/>\r\n      <h5 style={{textAlign: 'center'}}>\r\n        ―Attack Comparison Against AC Values―\r\n      </h5>\r\n      {lineChart}\r\n    </Container>\r\n  )\r\n\r\n}\r\n\r\nexport default Comparison;","import React from 'react';\nimport {Container, Row, Col, Modal, Form, Button, Navbar} from 'react-bootstrap'\nimport CharacterBar from './components/character-bar';\nimport Comparison from './components/comparison';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCharacterModal: false,\n      charModalName: '',\n      characters: [],\n      createTrueEditFalse: true,\n      editId: null,\n      nextID: 0\n    }\n  }\n\n  editCharacter = (charId) => {\n\n    var charName = this.state.characters.find(cha => {\n      return (cha.id===charId)\n    }).name\n\n    this.setState({\n      showCharacterModal : true,\n      charModalName: charName,\n      createTrueEditFalse: false,\n      editId: charId\n    })\n  }\n  \n  handleCreateCharacter = (e) => { \n    e.preventDefault();\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n    charsCopy.push({\n      name: this.state.charModalName,\n      attacks: [],\n      id: this.state.nextID\n    })\n    this.setState({\n      showCharacterModal: false,\n      charModalName: '',\n      characters: charsCopy,\n      createTrueEditFalse: true,\n      nextID: ++this.state.nextID,\n      editId: null\n    })\n  }\n\n  handleEditCharacter = (e) => {\n    e.preventDefault();\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n\n    let character = charsCopy.find(cha => {\n      return (cha.id === this.state.editId);\n    })\n\n    character.name = this.state.charModalName;\n\n    this.setState({\n      showCharacterModal: false,\n      charModalName: '',\n      createTrueEditFalse: true,\n      characters: charsCopy,\n      editId: null\n    })\n  \n  }\n\n  handleDeleteCharacter = (charId) => {\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n\n    charsCopy = charsCopy.filter(cha => {\n      if (cha.id === charId) return false;\n      else return true;\n    })\n\n    this.setState({\n      showCharacterModal: false,\n      charModalName: '',\n      characters: charsCopy,\n      createTrueEditFalse: true,\n      nextID: ++this.state.nextID,\n      editId: null\n    })\n  }\n\n  handleAddAttack = (e) => {\n    e.preventDefault();\n    // console.log(e.formData);\n    // Need to find the character this weapon belongs to\n\n    var {charId, attackName, firstAttackModifier, firstAttackDamage, secondAttackModifier, secondAttackDamage, thirdAttackModifier, thirdAttackDamage, fourthAttackModifier, fourthAttackDamage} = e.formData;\n\n    let characters = JSON.parse(JSON.stringify(this.state.characters));\n    let character = characters.find(c => c.id===charId);\n\n    let attackId=this.state.nextID;\n\n    character.attacks.push({\n      attackName, \n      attackId, \n      firstAttackModifier, \n      firstAttackDamage, \n      secondAttackModifier, \n      secondAttackDamage, \n      thirdAttackModifier, \n      thirdAttackDamage, \n      fourthAttackModifier, \n      fourthAttackDamage,\n      compare: false\n    })\n\n    this.setState({\n      characters,\n      nextID: this.state.nextID+1\n    })\n  }\n\n  handleEditAttack = (e) => {\n    e.preventDefault();\n\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n\n    for (let character of charsCopy) {\n      for (let attackIndex in character.attacks) {\n        let attack = character.attacks[attackIndex]\n        if (attack.attackId === e.formData.attackId) {\n          character.attacks[attackIndex] = e.formData;\n          break;\n        }\n      }\n    }\n    this.setState({characters: charsCopy})\n  }\n\n  handleDeleteAttack = (e) => {\n    e.preventDefault();\n\n    let charsCopy = JSON.parse(JSON.stringify(this.state.characters));\n    console.log(e.attackId);\n\n    for (let character of charsCopy) {\n      for (let attackIndex in character.attacks) {\n        if (character.attacks[attackIndex].attackId === e.attackId) {\n          character.attacks.splice(attackIndex, 1);\n          break;\n        }\n      }\n    }\n\n    this.setState({characters: charsCopy})\n  }\n\n\n  changeComparison = (attackId, checked) => {\n    let characters = JSON.parse(JSON.stringify(this.state.characters));\n\n    for (let character of characters) {\n      for (let attack of character.attacks) {\n        if (attack.attackId === attackId) {\n          attack.compare = checked;\n          this.setState({characters})\n        }\n      }\n    }\n  }\n  \n\n  render() {\n    // console.log((new Date()).toLocaleTimeString());\n    \n    let characters = this.state.characters.map(char => {\n      return (\n        <CharacterBar \n          char={char} \n          key={char.id} \n          handleAddAttack={this.handleAddAttack}\n          handleEditAttack={this.handleEditAttack}\n          handleDeleteAttack={this.handleDeleteAttack}\n          changeComparison={this.changeComparison}\n          editCharacter={this.editCharacter}\n          handleDeleteCharacter={this.handleDeleteCharacter}\n        />\n      )\n    })\n    \n    let attacks = [];\n    for (let char of this.state.characters) {\n      for (let attack of char.attacks) {\n        if (attack.compare) {\n          let attackOut = Object.assign({}, attack, {\n            characterName: char.name\n          })\n          attacks.push(attackOut);\n        }\n      }\n    }\n\n\n    return (\n      <div className=\"app\" id=\"app-body\">\n        <TitleBar>\n          Attack Comparison\n        </TitleBar>\n        <div className=\"add-character-button-div text-center\">\n          <button \n            className=\"btn btn-outline-dark add-character-button\"\n            // data-toggle=\"modal\"\n            // data-target=\"#exampleModal\"\n            onClick={() => {\n              // console.log(\"shown\");\n              this.setState({showCharacterModal: true})\n            }}\n          >\n            <h4>+ Add Character +</h4>\n          </button>\n          <Modal \n            show={this.state.showCharacterModal}\n            onHide={()=>{\n              // console.log(\"hidden\")\n              this.setState({showCharacterModal: false})\n            }}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>\n                Create a Character\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>              \n              <Form \n                onSubmit={this.state.createTrueEditFalse ? this.handleCreateCharacter: this.handleEditCharacter}\n              >\n                <Form.Group \n                  controlId=\"CharacterName\" \n                  as={Row}\n                >\n                  <Form.Label \n                    column sm=\"4\"\n                    >\n                    Character Name\n                  </Form.Label>\n                  <Col sm=\"6\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"CharacterName\"\n                      required\n                      autoComplete=\"off\"\n                      placeholder=\"Character Name\"\n                      onChange={(e)=>{\n                        this.setState({charModalName: e.target.value})\n                        // console.log(e.target.value)\n                      }}\n                      value={this.state.charModalName}\n                      />\n                  </Col>\n\n                </Form.Group>\n\n                <Button type=\"submit\">\n                  Submit\n                </Button>\n                \n              </Form>\n            </Modal.Body>\n            \n          </Modal>\n        </div>\n        {characters}\n        <Comparison \n          characters={this.state.characters} \n          attacks={attacks} \n        />\n      </div>\n    )\n  }\n}\n\n\nfunction TitleBar(props) {\n  return (\n    <Navbar className=\"titlebar\">\n      <h2>{props.children}</h2>\n    </Navbar>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}